/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Living environment of the cat
 */
export const Environment = {
  Indoor: "indoor",
  Outdoor: "outdoor",
} as const;
/**
 * Living environment of the cat
 */
export type Environment = ClosedEnum<typeof Environment>;

export type Cat = {
  /**
   * The type of pet
   */
  type: string;
  /**
   * The name of the cat
   */
  name: string;
  /**
   * The age of the cat
   */
  age: number;
  /**
   * The breed of the cat
   */
  breed: string;
  /**
   * Living environment of the cat
   */
  environment: Environment;
};

/** @internal */
export const Environment$inboundSchema: z.ZodNativeEnum<typeof Environment> = z
  .nativeEnum(Environment);

/** @internal */
export const Environment$outboundSchema: z.ZodNativeEnum<typeof Environment> =
  Environment$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Environment$ {
  /** @deprecated use `Environment$inboundSchema` instead. */
  export const inboundSchema = Environment$inboundSchema;
  /** @deprecated use `Environment$outboundSchema` instead. */
  export const outboundSchema = Environment$outboundSchema;
}

/** @internal */
export const Cat$inboundSchema: z.ZodType<Cat, z.ZodTypeDef, unknown> = z
  .object({
    type: z.string(),
    name: z.string(),
    age: z.number(),
    breed: z.string(),
    environment: Environment$inboundSchema,
  });

/** @internal */
export type Cat$Outbound = {
  type: string;
  name: string;
  age: number;
  breed: string;
  environment: string;
};

/** @internal */
export const Cat$outboundSchema: z.ZodType<Cat$Outbound, z.ZodTypeDef, Cat> = z
  .object({
    type: z.string(),
    name: z.string(),
    age: z.number(),
    breed: z.string(),
    environment: Environment$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Cat$ {
  /** @deprecated use `Cat$inboundSchema` instead. */
  export const inboundSchema = Cat$inboundSchema;
  /** @deprecated use `Cat$outboundSchema` instead. */
  export const outboundSchema = Cat$outboundSchema;
  /** @deprecated use `Cat$Outbound` instead. */
  export type Outbound = Cat$Outbound;
}
